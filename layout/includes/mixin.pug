//- 文章信息
mixin PostListInfo(item, post)
  - let priority = theme.index_posts.description.priority
  - let limit = (theme.index_posts.description.max_length_of_content ? theme.index_posts.description.max_length_of_content : 100)
  - let defaultContent = theme.index_posts.description.max_length_of_content ? theme.index_posts.description.max_length_of_content : ''
  case item.type
    when 'flexbox'
      if item.flex
        .flexbox(style='flex:'+item.flex+';')
      else
        .flexbox
    when 'hr'
      .hr
    when 'title'
      a.title(href=url_for(post.path))=(post.title ? post.title : (theme.index_posts.default_title ? theme.index_posts.default_title : _p("post_item.notitle")))
    when 'description'
      if theme.index_posts.description.priority
      .description!=PostDescription(post)
    when 'group'
      .group
        each subitem in item.items
          +PostListInfo(subitem, post)
    when 'categories'
      if post.categories.data.length > 0
        .categories
          .info
            i(class=icon_categories)
            =_p("post_item.categories")
          each cate, count in post.categories.data
            if theme.index_posts.categories.limit
              if count + 1 < theme.index_posts.categories.limit
                a.category(href=url_for(cate.path))=cate.name
            else
              a.category(href=url_for(cate.path))=cate.name
    when 'tags'
      if post.tags.data.length > 0
        .tags
          .info
            if post.tags.data.length == 1
              i(class=icon_tag)
              =_p("post_item.tag")
            else
              i(class=icon_tags)
              =_p("post_item.tags")
          each tag, count in post.tags.data
            if theme.index_posts.tags.limit
              if count + 1 < theme.index_posts.tags.limit
                a.tag(href=url_for(tag.path))=tag.name
            else
              a.tag(href=url_for(tag.path))=tag.name
    when 'updated'
      if post.updated
        .updated
          i(class=icon_updated)
          span.content
            =_p("post_item.updated")
            time(datetime=post.updated.toJSON())= date(post.updated, date_format)
    when 'date'
      if post.date
        .date
          i(class=icon_date)
          span.content
            =_p("post_item.date")
            time(datetime=post.date.toJSON())= date(post.date, date_format)
    when 'min2read'
      .minutes
        i(class=icon_minutes)
        span.content= _p("post_item.min2read_before") + min2read(post.content) + _p("post_item.min2read_after")
    when 'wordcount'
      .wordcount
        i(class=icon_wordcount)
        span.content= _p("post_item.wordcount_before") + wordcount(post.content) + _p("post_item.wordcount_after")
    when 'sticky'
      if post.sticky > 0
        .sticky
          i(class=icon_pin)
          =_p("post_item.sticky")

//- 文章列表
mixin PostList(posts)
  if posts.length > 0
    .posts
      //- !=Checker(theme.index_posts.default_covers)
      each post in posts
        .post(class=((post.cover || theme.index_posts.default_covers) ? 'cover' : ''))
          if post.cover
            a.cover(href=url_for(post.path))
              img(src=post.cover alt=post.title)
          else if theme.index_posts.default_covers
            .cover
              img(src=RandomImage(post.source) alt=post.title)
          if theme.index_posts.info_items
            .info
              each item in theme.index_posts.info_items
                +PostListInfo(item, post)


//- 社交链接
mixin SocialLinks()
  if theme.info.social_link
    .social-links
      each item in theme.info.social_link
        a.item(href=item.href title=item.name)
          i(class=item.icon)


//- 页面信息组件
mixin PageInfoItem(items)
  each item in items
    case item.type
      when 'title'
        h1.title=page.title ? page.title : _p("post_item.notitle")
      when 'group'
        .group
          +PageInfoItem(item.items)
      when 'sticky'
        if page.sticky > 0
          .sticky
            i(class=icon_pin)
            =_p("post_item.sticky")
      when 'date'
        if page.date
          .date
            i(class=icon_date)
            time(datetime=page.date.toJSON())= date(page.date, date_format)
      when 'updated'
        if page.updated
          .updated
            i(class=icon_updated)
            time(datetime=page.updated.toJSON())= date(page.updated, date_format)
      when 'wordcount'
        .wordcount
          i(class=icon_wordcount)
          !=wordcount(page.content)
      when 'min2read'
        .minutes
          i(class=icon_minutes)
          !=min2read(page.content)
      when 'categories'
        if page.categories.data.length > 0
          .categories
            .info
              i(class=icon_categories)
            each cate in page.categories.data
              a.category(href=url_for(cate.path))=cate.name
      when 'tags'
        if page.tags.data.length > 0
          .tags
            .info
              if page.tags.data.length == 1
                i(class=icon_tag)
              else
                i(class=icon_tags)
            each tag in page.tags.data
              a.tag(href=url_for(tag.path))=tag.name
      //- when 'readed'
  
//- 页面信息
mixin PageInfo()
  if page.cover
    img.cover(src=page.cover alt=page.title)
  else if theme.index_posts.default_covers
    img.cover(src=RandomImage(page.source) alt=page.title)
  .info
    +PageInfoItem(theme.page.items)